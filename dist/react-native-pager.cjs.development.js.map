{"version":3,"file":"react-native-pager.cjs.development.js","sources":["../src/pager.tsx","../src/util.ts","../src/pagination.tsx"],"sourcesContent":["import React, {\n  useState,\n  Children,\n  createContext,\n  useContext,\n  useEffect,\n} from 'react';\nimport { StyleSheet, LayoutChangeEvent, ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  State,\n  PanGestureHandlerProperties,\n} from 'react-native-gesture-handler';\n\nexport type SpringConfig = {\n  damping: Animated.Adaptable<number>;\n  mass: Animated.Adaptable<number>;\n  stiffness: Animated.Adaptable<number>;\n  overshootClamping: Animated.Adaptable<number> | boolean;\n  restSpeedThreshold: Animated.Adaptable<number>;\n  restDisplacementThreshold: Animated.Adaptable<number>;\n  toValue: Animated.Adaptable<number>;\n};\n\n// copied from react-native-reanimated for now, can't get the export\nexport enum Extrapolate {\n  EXTEND = 'extend',\n  CLAMP = 'clamp',\n  IDENTITY = 'identity',\n}\n\ninterface InterpolationConfig {\n  inputRange: ReadonlyArray<Animated.Adaptable<number>>;\n  outputRange: ReadonlyArray<Animated.Adaptable<number>>;\n  extrapolate?: Extrapolate;\n  extrapolateLeft?: Extrapolate;\n  extrapolateRight?: Extrapolate;\n}\n\ntype iInterpolationFn = (\n  offset: Animated.Node<number>\n) => Animated.Node<number>;\n\ninterface iInterpolationConfig extends InterpolationConfig {\n  unit?: string;\n}\n\ntype iTransformProp = {\n  [transformProp: string]: iInterpolationConfig | iInterpolationFn;\n};\n\nexport interface iPageInterpolation {\n  [animatedProp: string]:\n    | iTransformProp[]\n    | iInterpolationConfig\n    | iInterpolationFn;\n}\n\nconst VERTICAL = 1;\nconst HORIZONTAL = 2;\nconst UNSET = -1;\nconst TRUE = 1;\nconst FALSE = 0;\n\nconst {\n  // @ts-ignore\n  event,\n  defined,\n  block,\n  Value,\n  divide,\n  cond,\n  eq,\n  add,\n  stopClock,\n  Clock,\n  set,\n  clockRunning,\n  multiply,\n  sub,\n  call,\n  max,\n  min,\n  greaterThan,\n  abs,\n  ceil,\n  interpolate,\n  concat,\n  neq,\n  and,\n  startClock,\n  spring,\n  // @ts-ignore\n  debug,\n} = Animated;\n\nexport interface iPager {\n  onChange?: (nextIndex: number) => void;\n  initialIndex?: number;\n  children: React.ReactNode[];\n  springConfig?: Partial<SpringConfig>;\n  pageInterpolation?: iPageInterpolation;\n  panProps?: Partial<PanGestureHandlerProperties>;\n  pageSize?: number;\n  threshold?: number;\n  minIndex?: number;\n  maxIndex?: number;\n  adjacentChildOffset?: number;\n  style?: ViewStyle;\n  containerStyle?: ViewStyle;\n  type?: 'horizontal' | 'vertical';\n  clamp?: {\n    prev?: number;\n    next?: number;\n  };\n  clampDrag?: {\n    prev?: number;\n    next?: number;\n  };\n}\nconst REALLY_BIG_NUMBER = 1000000000;\n\n// at its core, this component converts an activeIndex integer value to an Animated.Value\n// this animated value represents all intermediate values of a pager, e.g when a user is dragging, the index\n// value might be anything between 1 -> 2 as they are moving. when a gesture is completed, it figures out\n// the next activeIndex, snaps to it and passes it back. it also handles snapping to different indices when the activeIndex\n// prop changes.\n\n// all styles and positioning of child screens can be computed from this one value, based on a childs index and\n// any style config props passed to the Pager.\n\n// pretty much all other props passed to the Pager are configurations for different behaviours of what is described above\n\nfunction Pager({\n  onChange,\n  initialIndex = 0,\n  children,\n  springConfig,\n  panProps = {},\n  pageSize = 1,\n  threshold = 0.1,\n  minIndex = 0,\n  maxIndex: parentMax,\n  adjacentChildOffset = 10,\n  style,\n  containerStyle,\n  type = 'horizontal',\n  pageInterpolation,\n  clamp = {},\n  clampDrag = {},\n}: iPager) {\n  const { animatedValue, animatedIndex, nextIndex } = useContext(PagerContext);\n\n  const numberOfScreens = Children.count(children);\n\n  const maxIndex =\n    parentMax === undefined\n      ? Math.ceil((numberOfScreens - 1) / pageSize)\n      : parentMax;\n\n  const dragX = memoize(new Value(0));\n  const dragY = memoize(new Value(0));\n  const gestureState = memoize(new Value(0));\n\n  const handleGesture = memoize(\n    event(\n      [\n        {\n          nativeEvent: {\n            translationX: dragX,\n            translationY: dragY,\n          },\n        },\n      ],\n      { useNativeDriver: true }\n    )\n  );\n\n  const handleStateChange = memoize(\n    event(\n      [\n        {\n          nativeEvent: {\n            state: gestureState,\n          },\n        },\n      ],\n      {\n        useNativeDriver: true,\n      }\n    )\n  );\n\n  let initialWidth = UNSET;\n  if (style && style.width) {\n    if (typeof style.width === 'number') {\n      initialWidth = style.width;\n    }\n  }\n\n  let initialHeight = UNSET;\n  if (style && style.height) {\n    if (typeof style.height === 'number') {\n      initialHeight = style.height;\n    }\n  }\n\n  const [width, setWidth] = useState(initialWidth);\n  const [height, setHeight] = useState(initialHeight);\n\n  // assign references based on vertical / horizontal configurations\n  const dimension = memoize(new Value(0));\n  const targetDimension = type === 'vertical' ? 'height' : 'width';\n  const targetTransform = type === 'vertical' ? 'translateY' : 'translateX';\n  const delta = type === 'vertical' ? dragY : dragX;\n\n  const layoutDimension = type === 'vertical' ? height : width;\n\n  // `totalDimension` on the container view is required for android layouts to work properly\n  // otherwise translations move the panHandler off of the screen\n  // set the total width of the container view to the sum width of all the screens\n  const totalDimension = multiply(dimension, numberOfScreens);\n\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\n    layout.width !== width && setWidth(layout.width);\n    layout.height !== height && setHeight(layout.height);\n  }\n\n  const TYPE = type === 'vertical' ? VERTICAL : HORIZONTAL;\n\n  // props that might change over time should be reactive:\n  const animatedThreshold = useAnimatedValue(threshold);\n  const clampDragPrev = useAnimatedValue(clampDrag.prev, REALLY_BIG_NUMBER);\n  const clampDragNext = useAnimatedValue(clampDrag.next, REALLY_BIG_NUMBER);\n  const animatedMaxIndex = useAnimatedValue(maxIndex);\n  const animatedMinIndex = useAnimatedValue(minIndex);\n\n  // pan event values to track\n  const dragStart = memoize(new Value(0));\n  const swiping = memoize(new Value(FALSE));\n  const _animatedActiveIndex = memoize(new Value(initialIndex));\n  const change = memoize(sub(_animatedActiveIndex, animatedValue));\n  const absChange = memoize(abs(change));\n  const shouldTransition = memoize(greaterThan(absChange, animatedThreshold));\n  const indexChange = memoize(new Value(0));\n\n  // clamp drag values between the configured clamp props\n  // e.g prev => 0.5, next => 0.5 means change can only be between [-0.5, 0.5]\n  // minMax order is reversed because next is negative in translation values\n  const clampedDelta = memoize(\n    min(\n      max(divide(delta, dimension), multiply(clampDragNext, -1)),\n      clampDragPrev\n    )\n  );\n\n  const clock = memoize(new Clock());\n\n  // snap focus to activeIndex when it updates\n  /*\n  useEffect(() => {\n    if (activeIndex >= minIndex && activeIndex <= maxIndex) {\n      nextIndex.setValue(activeIndex);\n    }\n  }, [activeIndex, minIndex, maxIndex]);\n  */\n\n  // animatedIndex represents pager position with an animated value\n  // this value is used to compute the transformations of the container screen\n  // its also used to compute the offsets of child screens, and any other consumers\n  const _animatedValue = memoize(\n    block([\n      cond(\n        eq(gestureState, State.ACTIVE),\n        [\n          cond(clockRunning(clock), stopClock(clock)),\n          // captures the initial drag value on first drag event\n          cond(swiping, 0, [set(dragStart, animatedValue), set(swiping, TRUE)]),\n\n          set(animatedValue, sub(dragStart, clampedDelta)),\n        ],\n        [\n          // on release -- figure out if the index needs to change, and what index it should change to\n          cond(swiping, [\n            set(swiping, FALSE),\n            cond(shouldTransition, [\n              // rounds index change if pan gesture greater than just one screen\n              set(indexChange, ceil(absChange)),\n              // nextIndex set to the next snap point\n              set(\n                nextIndex,\n                cond(\n                  greaterThan(change, 0),\n                  min(\n                    max(\n                      sub(_animatedActiveIndex, indexChange),\n                      animatedMinIndex\n                    ),\n                    animatedMaxIndex\n                  ),\n                  min(\n                    max(\n                      add(_animatedActiveIndex, indexChange),\n                      animatedMinIndex\n                    ),\n                    animatedMaxIndex\n                  )\n                )\n              ),\n              // update w/ value that will be snapped to\n              cond(\n                defined(onChange),\n                call([nextIndex], ([nextIndex]) => onChange?.(nextIndex))\n              ),\n            ]),\n          ]),\n\n          // set animatedActiveIndex for next swipe event\n          set(_animatedActiveIndex, nextIndex),\n          cond(defined(animatedIndex), set(animatedIndex, nextIndex)),\n          set(\n            animatedValue,\n            runSpring(clock, animatedValue, nextIndex, springConfig)\n          ),\n        ]\n      ),\n      debug('position', animatedValue),\n      cond(defined(animatedValue), set(animatedValue, animatedValue)),\n      animatedValue,\n    ])\n  );\n\n  const clampPrevValue = useAnimatedValue(clamp.prev, numberOfScreens);\n  const clampNextValue = useAnimatedValue(clamp.next, numberOfScreens);\n\n  // stop child screens from translating beyond the bounds set by clamp props:\n  const minimum = memoize(\n    multiply(sub(_animatedValue, clampPrevValue), dimension)\n  );\n\n  const maximum = memoize(\n    multiply(add(_animatedValue, clampNextValue), dimension)\n  );\n\n  const animatedPageSize = useAnimatedValue(pageSize);\n\n  // container offset -- this is the window of focus for active screens\n  // it shifts around based on the animatedIndex value\n  const containerTranslation = memoize(\n    multiply(_animatedValue, dimension, animatedPageSize, -1)\n  );\n\n  // slice the children that are rendered by the <Pager />\n  // this enables very large child lists to render efficiently\n  // the downside is that children are unmounted after they pass this threshold\n  // it's an optional prop, however a default value of ~20 is set here to prevent\n  // possible performance bottlenecks to those not aware of the prop or what it does\n\n  // this will slice adjacentChildOffset number of children previous and after\n  // the current active child index into a smaller child array\n  const adjacentChildren =\n    adjacentChildOffset !== undefined\n      ? children.slice(\n          Math.max(initialIndex - adjacentChildOffset, 0),\n          Math.min(initialIndex + adjacentChildOffset + 1, numberOfScreens)\n        )\n      : children;\n\n  // grabbing the height property from the style prop if there is no container style, this reduces\n  // the chances of messing up the layout with containerStyle configurations\n  // can be overridden by the prop itself, but its likely that this is what is intended most of the time\n  // also has the benefit of covering 100% width of container, meaning better pan coverage on android\n  const defaultContainerStyle =\n    style && style.height ? { height: style.height } : undefined;\n\n  function renderChildren() {\n    // waiting for initial layout - except when testing\n    if (width === UNSET) {\n      return null;\n    }\n\n    return adjacentChildren.map((child: any, i) => {\n      // use map instead of React.Children because we want to track\n      // the keys of these children by there index\n      // React.Children shifts these key values intelligently, but it\n      // causes issues with the memoized values in <Page /> components\n      let index = i;\n\n      if (adjacentChildOffset !== undefined) {\n        index =\n          initialIndex <= adjacentChildOffset\n            ? i\n            : initialIndex - adjacentChildOffset + i;\n      }\n\n      return (\n        <Page\n          index={index}\n          animatedIndex={_animatedValue}\n          minimum={minimum}\n          maximum={maximum}\n          dimension={dimension}\n          targetTransform={targetTransform}\n          targetDimension={targetDimension}\n          pageInterpolation={pageInterpolation}\n        >\n          {child}\n        </Page>\n      );\n    });\n  }\n\n  // extra Animated.Views below may seem redundant but they preserve applied styles e.g padding and margin\n  // of the page views\n  return (\n    <Animated.View\n      style={containerStyle || defaultContainerStyle || { flex: 1 }}\n    >\n      <Animated.Code\n        key={layoutDimension}\n        exec={cond(\n          // dimension already set to last layout\n          and(eq(dimension, width), eq(dimension, height)),\n          [],\n          [\n            cond(\n              eq(TYPE, VERTICAL),\n              set(dimension, height),\n              set(dimension, width)\n            ),\n          ]\n        )}\n      />\n\n      <PanGestureHandler\n        {...panProps}\n        onGestureEvent={handleGesture}\n        onHandlerStateChange={handleStateChange}\n      >\n        <Animated.View style={{ flex: 1 }}>\n          <Animated.View style={style || { flex: 1 }}>\n            <Animated.View style={{ flex: 1 }} onLayout={handleLayout}>\n              <Animated.View\n                style={{\n                  flex: 1,\n                  [targetDimension]: totalDimension,\n                  transform: [{ [targetTransform]: containerTranslation }],\n                }}\n              >\n                {renderChildren()}\n              </Animated.View>\n            </Animated.View>\n          </Animated.View>\n        </Animated.View>\n      </PanGestureHandler>\n    </Animated.View>\n  );\n}\n\ninterface iPage {\n  children: React.ReactNode;\n  index: number;\n  minimum: Animated.Node<number>;\n  maximum: Animated.Node<number>;\n  dimension: Animated.Node<number>;\n  targetTransform: 'translateX' | 'translateY';\n  targetDimension: 'width' | 'height';\n  pageInterpolation: iPageInterpolation | undefined;\n  animatedIndex: Animated.Value<number>;\n}\n\nfunction Page({\n  children,\n  index,\n  minimum,\n  maximum,\n  dimension,\n  targetTransform,\n  targetDimension,\n  pageInterpolation,\n  animatedIndex,\n}: iPage) {\n  // compute the absolute position of the page based on index and dimension\n  // this means that it's not relative to any other child, which is good because\n  // it doesn't rely on a mechanism like flex, which requires all children to be present\n  // to properly position pages\n  const position = memoize(multiply(index, dimension));\n\n  // min-max the position based on clamp values\n  // this means the <Page /> will have a container that is always positioned\n  // in the same place, but the inner view can be translated within these bounds\n  const translation = memoize(min(max(position, minimum), maximum));\n\n  const defaultStyle = memoize({\n    // map to height / width value depending on vertical / horizontal configuration\n    // this is crucial to getting child views to properly lay out\n    [targetDimension]: dimension,\n    // min-max the position based on clamp values\n    // this means the <Page /> will have a container that is always positioned\n    // in the same place, but the inner view can be translated within these bounds\n    transform: [\n      {\n        [targetTransform]: translation,\n      },\n    ],\n  });\n\n  // compute the relative offset value to the current animated index so\n  // that <Page /> can use interpolation values that are in sync with drag gestures\n  const offset = memoize(sub(index, animatedIndex));\n\n  // apply interpolation configs to <Page />\n  const interpolatedStyles = memoize(\n    interpolateWithConfig(offset, pageInterpolation)\n  );\n\n  // take out zIndex here as it needs to be applied to siblings\n  let { zIndex, ...otherStyles } = interpolatedStyles;\n\n  // zIndex is not a requirement of interpolation\n  // it will be clear when someone needs it as views will overlap with some configurations\n  if (!zIndex) {\n    zIndex = 0;\n  }\n\n  return (\n    <Animated.View\n      style={{\n        ...StyleSheet.absoluteFillObject,\n        ...defaultStyle,\n        zIndex,\n      }}\n    >\n      <Animated.View style={[StyleSheet.absoluteFillObject, otherStyles]}>\n        {children}\n      </Animated.View>\n    </Animated.View>\n  );\n}\n\n// utility to update animated values without changing their reference\n// this is key for using memoized Animated.Values and prevents costly rerenders\nfunction useAnimatedValue(\n  value?: number,\n  defaultValue = 0\n): Animated.Value<number> {\n  const initialValue = value !== undefined ? value : defaultValue;\n  const animatedValue = memoize(new Value(initialValue));\n\n  useEffect(() => {\n    if (value !== undefined) {\n      animatedValue.setValue(value);\n    }\n  }, [value]);\n\n  return animatedValue;\n}\n\ninterface iPagerContext {\n  animatedValue: Animated.Value<number>;\n  animatedIndex: Animated.Value<number>;\n  nextIndex: Animated.Value<number>;\n}\n\nconst PagerContext = createContext<iPagerContext>({\n  animatedValue: new Value(0),\n  animatedIndex: new Value(0),\n  nextIndex: new Value(0),\n});\n\ninterface iPagerProvider {\n  children: React.ReactNode;\n  initialIndex: number;\n}\n\nconst PagerProvider: React.FC<iPagerProvider> = ({\n  children,\n  initialIndex = 0,\n}) => {\n  const animatedValue = memoize(new Value<number>(initialIndex));\n  const animatedIndex = memoize(new Value<number>(initialIndex));\n  const nextIndex = memoize(new Value<number>(initialIndex));\n\n  return (\n    <PagerContext.Provider value={{ animatedValue, animatedIndex, nextIndex }}>\n      {typeof children === 'function'\n        ? children({ animatedValue, animatedIndex, nextIndex })\n        : children}\n    </PagerContext.Provider>\n  );\n};\n\nfunction usePager(): iPagerContext {\n  const context = useContext(PagerContext);\n\n  if (context === undefined) {\n    throw new Error(`usePager() must be used within a <PagerProvider />`);\n  }\n\n  return context;\n}\n\nconst IndexContext = React.createContext<undefined | number>(undefined);\n\ninterface iIndexProvider {\n  children: React.ReactNode;\n  index: number;\n}\n\nfunction useIndex() {\n  const index = useContext(IndexContext);\n\n  if (index === undefined) {\n    throw new Error(`useIndex() must be used within an <IndexProvider />`);\n  }\n\n  return index;\n}\n\nfunction useAnimatedIndex() {\n  const pager = usePager();\n  return pager[2];\n}\n\nfunction useOffset(index: number) {\n  const animatedIndex = useAnimatedIndex();\n  const offset = memoize(sub(index, animatedIndex));\n\n  return offset;\n}\n\nfunction useInterpolation(\n  pageInterpolation: iPageInterpolation,\n  index?: number\n) {\n  const _index = index !== undefined ? index : useIndex();\n  const offset = useOffset(_index);\n  const styles = memoize(interpolateWithConfig(offset, pageInterpolation));\n  return styles;\n}\n\nfunction interpolateWithConfig(\n  offset: Animated.Node<number>,\n  pageInterpolation?: iPageInterpolation\n): ViewStyle {\n  if (!pageInterpolation) {\n    return {};\n  }\n\n  return Object.keys(pageInterpolation).reduce((styles: any, key: any) => {\n    const currentStyle = pageInterpolation[key];\n\n    if (Array.isArray(currentStyle)) {\n      const _style = currentStyle.map((interpolationConfig: any) =>\n        interpolateWithConfig(offset, interpolationConfig)\n      );\n\n      styles[key] = _style;\n      return styles;\n    }\n\n    if (typeof currentStyle === 'object') {\n      let _style;\n      const { unit, ...rest } = currentStyle;\n      if (currentStyle.unit) {\n        _style = concat(interpolate(offset, rest), currentStyle.unit);\n      } else {\n        _style = interpolate(offset, currentStyle);\n      }\n\n      styles[key] = _style;\n      return styles;\n    }\n\n    if (typeof currentStyle === 'function') {\n      const _style = currentStyle(offset);\n      styles[key] = _style;\n      return styles;\n    }\n\n    return styles;\n  }, {});\n}\n\nfunction memoize(value: any): any {\n  const ref = React.useRef(value);\n  return ref.current;\n}\n\nconst DEFAULT_SPRING_CONFIG = {\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: false,\n  restDisplacementThreshold: 0.01,\n  restSpeedThreshold: 0.01,\n};\n\nfunction runSpring(\n  clock: Animated.Clock,\n  position: Animated.Value<number>,\n  toValue: Animated.Node<number>,\n  springConfig?: Partial<SpringConfig>\n) {\n  const state = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: position,\n    time: new Value(0),\n  };\n\n  const config = {\n    ...DEFAULT_SPRING_CONFIG,\n    ...springConfig,\n    toValue: new Value(0),\n  };\n\n  return block([\n    cond(\n      clockRunning(clock),\n      [\n        cond(neq(config.toValue, toValue), [\n          set(state.finished, 0),\n          set(config.toValue, toValue),\n        ]),\n      ],\n      [\n        set(state.finished, 0),\n        set(state.time, 0),\n        set(state.velocity, 0),\n        set(config.toValue, toValue),\n        startClock(clock),\n      ]\n    ),\n    spring(clock, state, config),\n    cond(state.finished, [stopClock(clock), set(state.position, position)]),\n    state.position,\n  ]);\n}\n\nexport {\n  Pager,\n  PagerProvider,\n  PagerContext,\n  usePager,\n  useOffset,\n  useIndex,\n  useAnimatedIndex,\n  useInterpolation,\n};\n","import { useRef } from 'react';\nimport { ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { iPageInterpolation, SpringConfig } from './pager';\n\nconst {\n  interpolate,\n  concat,\n  Value,\n  clockRunning,\n  cond,\n  neq,\n  set,\n  startClock,\n  spring,\n  stopClock,\n  block,\n} = Animated;\n\nfunction interpolateWithConfig(\n  offset: Animated.Node<number>,\n  pageInterpolation?: iPageInterpolation\n): ViewStyle {\n  if (!pageInterpolation) {\n    return {};\n  }\n\n  return Object.keys(pageInterpolation).reduce((styles: any, key: any) => {\n    const currentStyle = pageInterpolation[key];\n\n    if (Array.isArray(currentStyle)) {\n      const _style = currentStyle.map((interpolationConfig: any) =>\n        interpolateWithConfig(offset, interpolationConfig)\n      );\n\n      styles[key] = _style;\n      return styles;\n    }\n\n    if (typeof currentStyle === 'object') {\n      let _style;\n      const { unit, ...rest } = currentStyle;\n      if (currentStyle.unit) {\n        _style = concat(interpolate(offset, rest), currentStyle.unit);\n      } else {\n        _style = interpolate(offset, currentStyle);\n      }\n\n      styles[key] = _style;\n      return styles;\n    }\n\n    if (typeof currentStyle === 'function') {\n      const _style = currentStyle(offset);\n      styles[key] = _style;\n      return styles;\n    }\n\n    return styles;\n  }, {});\n}\n\nfunction memoize(value: any): any {\n  const ref = useRef(value);\n  return ref.current;\n}\n\nconst DEFAULT_SPRING_CONFIG = {\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: false,\n  restDisplacementThreshold: 0.01,\n  restSpeedThreshold: 0.01,\n};\n\nfunction runSpring(\n  clock: Animated.Clock,\n  position: Animated.Value<number>,\n  toValue: Animated.Node<number>,\n  springConfig?: Partial<SpringConfig>\n) {\n  const state = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: position,\n    time: new Value(0),\n  };\n\n  const config = {\n    ...DEFAULT_SPRING_CONFIG,\n    ...springConfig,\n    toValue: new Value(0),\n  };\n\n  return block([\n    cond(\n      clockRunning(clock),\n      [\n        cond(neq(config.toValue, toValue), [\n          set(state.finished, 0),\n          set(config.toValue, toValue),\n        ]),\n      ],\n      [\n        set(state.finished, 0),\n        set(state.time, 0),\n        set(state.velocity, 0),\n        set(config.toValue, toValue),\n        startClock(clock),\n      ]\n    ),\n    spring(clock, state, config),\n    cond(state.finished, [stopClock(clock), set(state.position, position)]),\n    state.position,\n  ]);\n}\n\nexport { interpolateWithConfig, memoize, runSpring };\n","import React, { Children } from 'react';\nimport Animated from 'react-native-reanimated';\nimport { ViewStyle, LayoutChangeEvent } from 'react-native';\nimport { iPageInterpolation, useOffset, useAnimatedIndex } from './pager';\nimport { memoize, interpolateWithConfig } from './util';\n\nconst { Value, divide, multiply, add } = Animated;\n\ninterface iPagination {\n  children: React.ReactNode;\n  pageInterpolation: iPageInterpolation;\n  style?: ViewStyle;\n}\n\nconst DEFAULT_PAGINATION_STYLE: ViewStyle = {\n  height: 50,\n  width: '100%',\n  flexDirection: 'row',\n};\n\nfunction Pagination({ children, pageInterpolation, style }: iPagination) {\n  return (\n    <Animated.View\n      style={{\n        ...DEFAULT_PAGINATION_STYLE,\n        ...style,\n      }}\n    >\n      {Children.map(children, (child: any, index) => (\n        <PaginationItem\n          index={index}\n          pageInterpolation={pageInterpolation}\n          style={child.props.style}\n        >\n          {child}\n        </PaginationItem>\n      ))}\n    </Animated.View>\n  );\n}\n\ninterface iPaginationItem {\n  children: React.ReactNode;\n  pageInterpolation: iPageInterpolation;\n  index: number;\n  style?: ViewStyle;\n}\n\nfunction PaginationItem({\n  children,\n  pageInterpolation,\n  index,\n  style,\n}: iPaginationItem) {\n  const offset = useOffset(index);\n  const configStyles = memoize(\n    interpolateWithConfig(offset, pageInterpolation)\n  );\n\n  return (\n    <Animated.View style={[style || { flex: 1 }, configStyles]}>\n      {children}\n    </Animated.View>\n  );\n}\n\ninterface iSlider {\n  numberOfScreens: number;\n  style: ViewStyle;\n}\n\nconst DEFAULT_SLIDER_STYLE = {\n  height: 2,\n  backgroundColor: 'aquamarine',\n};\n\nfunction Slider({ numberOfScreens, style }: iSlider) {\n  const animatedIndex = useAnimatedIndex();\n  const width = memoize(new Value(0));\n\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\n    width.setValue(layout.width as any);\n  }\n\n  const sliderWidth = divide(width, numberOfScreens);\n  const translation = memoize(multiply(animatedIndex, sliderWidth));\n\n  return (\n    <Animated.View onLayout={handleLayout}>\n      <Animated.View\n        style={{\n          width: sliderWidth,\n          transform: [{ translateX: translation }],\n          ...DEFAULT_SLIDER_STYLE,\n          ...style,\n        }}\n      />\n    </Animated.View>\n  );\n}\n\nfunction Progress({ numberOfScreens, style }: iSlider) {\n  const animatedIndex = useAnimatedIndex();\n\n  const width = memoize(new Value(0));\n\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\n    width.setValue(layout.width as any);\n  }\n\n  const sliderWidth = memoize(\n    divide(width, numberOfScreens, divide(1, add(animatedIndex, 1)))\n  );\n\n  return (\n    <Animated.View onLayout={handleLayout}>\n      <Animated.View\n        style={{\n          width: sliderWidth,\n          height: 2,\n          backgroundColor: 'rebeccapurple',\n          ...DEFAULT_SLIDER_STYLE,\n          ...style,\n        }}\n      />\n    </Animated.View>\n  );\n}\n\nexport { Pagination, Slider, Progress };\n"],"names":["Extrapolate","VERTICAL","HORIZONTAL","UNSET","TRUE","FALSE","event","Animated","defined","block","Value","divide","cond","eq","add","stopClock","Clock","set","clockRunning","multiply","sub","call","max","min","greaterThan","abs","ceil","interpolate","concat","neq","and","startClock","spring","debug","REALLY_BIG_NUMBER","Pager","onChange","initialIndex","children","springConfig","panProps","pageSize","threshold","minIndex","parentMax","maxIndex","adjacentChildOffset","style","containerStyle","type","pageInterpolation","clamp","clampDrag","useContext","PagerContext","animatedValue","animatedIndex","nextIndex","numberOfScreens","Children","count","undefined","Math","dragX","memoize","dragY","gestureState","handleGesture","nativeEvent","translationX","translationY","useNativeDriver","handleStateChange","state","initialWidth","width","initialHeight","height","useState","setWidth","setHeight","dimension","targetDimension","targetTransform","delta","layoutDimension","totalDimension","handleLayout","layout","TYPE","animatedThreshold","useAnimatedValue","clampDragPrev","prev","clampDragNext","next","animatedMaxIndex","animatedMinIndex","dragStart","swiping","_animatedActiveIndex","change","absChange","shouldTransition","indexChange","clampedDelta","clock","_animatedValue","State","ACTIVE","runSpring","clampPrevValue","clampNextValue","minimum","maximum","animatedPageSize","containerTranslation","adjacentChildren","slice","defaultContainerStyle","renderChildren","map","child","i","index","React","Page","View","flex","Code","key","exec","PanGestureHandler","onGestureEvent","onHandlerStateChange","onLayout","transform","position","translation","defaultStyle","offset","interpolatedStyles","interpolateWithConfig","zIndex","otherStyles","StyleSheet","absoluteFillObject","value","defaultValue","initialValue","useEffect","setValue","createContext","PagerProvider","Provider","usePager","context","Error","IndexContext","useIndex","useAnimatedIndex","pager","useOffset","useInterpolation","_index","styles","Object","keys","reduce","currentStyle","Array","isArray","_style","interpolationConfig","unit","rest","ref","useRef","current","DEFAULT_SPRING_CONFIG","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","toValue","finished","velocity","time","config","DEFAULT_PAGINATION_STYLE","flexDirection","Pagination","PaginationItem","props","configStyles","DEFAULT_SLIDER_STYLE","backgroundColor","Slider","sliderWidth","translateX","Progress"],"mappings":"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"}